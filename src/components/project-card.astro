---
import {
  IconBrandJavascript,
  IconBrandNextjs,
  IconBrandReact,
  IconBrandSvelte,
  IconBrandTailwind,
  IconBrandTypescript,
  IconCode,
  IconRocket,
} from "@tabler/icons-react";
import { getEntry, type CollectionEntry } from "astro:content";
import { formatMonth } from "../utils";
import { LinkCard } from "./link-card";

export type Props = { project: CollectionEntry<"projects">["slug"] };
const { project: projectName } = Astro.props;
const project = await getEntry("projects", projectName);
---

<LinkCard href={project.data.deploymentURL ?? "https://github.com/zsrobinson"}>
  <p class="text-2xl leading-[1.15]">{project.data.title}</p>
  <p class="text-zinc-600 dark:text-zinc-400 text-sm pb-2">
    Developed in {formatMonth(project.data.date)}
  </p>

  <p class="text-zinc-600 dark:text-zinc-400 line-clamp-3 pb-2">
    {project.data.description}
  </p>

  <div class="flex gap-2">
    {
      project.data.tech?.map((t) => (
        <span class="text-zinc-600 dark:text-zinc-400 text-sm flex items-center gap-1">
          {t === "Next.js" ? (
            <IconBrandNextjs className="inline" size={18} />
          ) : t === "TypeScript" ? (
            <IconBrandTypescript className="inline" size={18} />
          ) : t === "Astro" ? (
            <IconRocket className="inline" size={18} />
          ) : t === "React" ? (
            <IconBrandReact className="inline" size={18} />
          ) : t === "JavaScript" ? (
            <IconBrandJavascript className="inline" size={18} />
          ) : t === "Tailwind" ? (
            <IconBrandTailwind className="inline" size={18} />
          ) : t === "Svelte" ? (
            <IconBrandSvelte className="inline" size={18} />
          ) : (
            <IconCode className="inline" size={18} />
          )}
          {t}
        </span>
      ))
    }
  </div>
</LinkCard>
