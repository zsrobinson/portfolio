---
import { CollectionEntry, getCollection } from "astro:content";
import Root from "../../layouts/root.astro";
import { formatDate } from "../../utils";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const { data, render } = Astro.props as CollectionEntry<"blog">;
const { Content, remarkPluginFrontmatter } = await render();
---

<Root title={data.title + " · Zachary Robinson"}>
  <div
    class="h-96 w-full dark:bg-gradient-to-b from-zinc-900 to-transparent fixed top-0 left-0 -z-10"
  >
  </div>

  <article class="flex flex-col items-center">
    <div class="mb-8 max-w-prose">
      <h1 class="font-handwriting text-4xl" style="text-wrap: balance;">
        {data.title}
      </h1>
      <div class="flex justify-between">
        <p class="text-zinc-400">
          {formatDate(data.date)} · {
            remarkPluginFrontmatter.minutesRead.split(" ")[0]
          } minute read
        </p>
        {
          data.updatedDate && (
            <p class="text-zinc-600">Updated {formatDate(data.updatedDate)}</p>
          )
        }
      </div>
    </div>

    <div class="prose prose-zinc dark:prose-invert prose-img:rounded-md">
      {
        data.heroAlt && data.heroSrc && (
          <div class="relative flex">
            <img
              alt={data.heroAlt}
              src={data.heroSrc}
              class="rounded-md m-0 peer"
            />
            <img
              alt={data.heroAlt}
              src={data.heroSrc}
              class="rounded-md absolute -z-10 blur-lg m-0 peer-hover:blur-xl transition"
            />
          </div>
        )
      }

      <Content />
    </div>
  </article>
</Root>
