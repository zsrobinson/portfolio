---
import { CollectionEntry, getCollection } from "astro:content";
import Root from "../../layouts/root.astro";
import { formatDate } from "../../utils";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const { data, render, slug } = Astro.props as CollectionEntry<"posts">;
const { Content, remarkPluginFrontmatter } = await render();
---

<Root title={data.title + " · Zachary Robinson"}>
  <article class="mb-48 flex flex-col items-center">
    <div class="mb-8 w-full max-w-prose">
      <h1 class="text-4xl font-semibold" style="text-wrap: balance;">
        {data.title}
      </h1>

      <p class="text-muted-foreground" transition:name={slug + "-details"}>
        <span
          title={data.updatedDate
            ? `Updated ${formatDate(data.updatedDate)}`
            : ""}>{formatDate(data.date)}</span
        > · {remarkPluginFrontmatter.minutesRead.split(" ")[0]} min read
      </p>
    </div>

    <div class="prose prose-zinc dark:prose-invert prose-img:rounded-md">
      {
        data.heroAlt && data.heroSrc && (
          <div class="relative flex pb-4">
            <img
              alt={data.heroAlt}
              src={data.heroSrc}
              class="peer m-0 rounded-md"
            />
            <img
              alt={data.heroAlt}
              src={data.heroSrc}
              class="absolute -z-10 m-0 rounded-md blur-lg transition peer-hover:blur-xl"
            />
          </div>
        )
      }

      <Content />
    </div>
  </article>
</Root>
